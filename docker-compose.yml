services:

  pgadmin:
      image: dpage/pgadmin4
      environment:
        - PGADMIN_DEFAULT_EMAIL=admin@admin.com
        - PGADMIN_DEFAULT_PASSWORD=root
        - PGADMIN_LISTEN_ADDRESS=0.0.0.0
      ports:
        - "5050:80"
      volumes:
        - ./tmp-data/pgadmin:/var/lib/pgadmin
      command: sh -c "chown -R 5050:5050 tmp-data/pgadmin"
  
  digi-decor-db:
    image: postgres:14.4-bullseye
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=UserApps
      - POSTGRES_HOST_AUTH_METHOD=md5
    ports:
      - "5434:5432"
    volumes:
      - ./tmp-data/digi-decor-db:/var/lib/postgresql/data
    depends_on:
      - pgadmin

  mongodb:
    image: mongo:6.0.1
    container_name: mongodb
    restart: unless-stopped
    env_file:
      - ./.mongoEnv
    ports:
      - "27018:27017"
    volumes:
      - ./tmp-data:/data/db
    command: mongod --bind_ip_all

  digi_decor:
    build: .
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 3000:3000
    env_file:
      - ./.env
    links:
      - mongodb
      - digi-decor-db
    depends_on:
      - mongodb
      - digi-decor-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.routers.api.rule=Host(`local-api.appName.com`)"
    command: bash -c "yarn install && bash ./docker/run.sh"

  minio:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./tmp-data/minio:/data
    environment:
      - MINIO_ROOT_USER=access-key
      - MINIO_ROOT_PASSWORD=secret-key
      - MINIO_REGION=us-west-2
    command: server /data --console-address ":9001"

  proxy:
    image: "traefik:v2.7"
    command:
      # - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"